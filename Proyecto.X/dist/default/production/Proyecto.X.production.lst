

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed May 26 00:21:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  027A                     __pidataCOMMON:
   215                           
   216                           ;initializer for _flag
   217  027A  3401               	retlw	1
   218  027B  3400               	retlw	0
   219                           
   220                           	psect	strings
   221  002B                     __pstrings:
   222  002B                     stringtab:
   223  002B                     __stringtab:
   224                           
   225                           ;	String table - string pointers are 1 byte each
   226  002B  1BFF               	btfsc	btemp+1,7
   227  002C  2835               	ljmp	stringcode
   228  002D  1383               	bcf	3,7
   229  002E  187F               	btfsc	btemp+1,0
   230  002F  1783               	bsf	3,7
   231  0030  0800               	movf	0,w
   232  0031  0A84               	incf	4,f
   233  0032  1903               	skipnz
   234  0033  0AFF               	incf	btemp+1,f
   235  0034  0008               	return
   236  0035                     stringcode:
   237  0035                     stringdir:
   238  0035  3000               	movlw	high stringdir
   239  0036  008A               	movwf	10
   240  0037  0804               	movf	4,w
   241  0038  0A84               	incf	4,f
   242  0039  0782               	addwf	2,f
   243  003A                     __stringbase:
   244  003A  3400               	retlw	0
   245  003B                     __end_of__stringtab:
   246  003B                     _data:
   247  003B  3461               	retlw	97
   248  003C                     __end_of_data:
   249  0019                     _TXREG	set	25
   250  0018                     _RCSTAbits	set	24
   251  000B                     _INTCONbits	set	11
   252  001A                     _RCREG	set	26
   253  0006                     _PORTB	set	6
   254  0005                     _PORTA	set	5
   255  000C                     _PIR1bits	set	12
   256  009A                     _SPBRGH	set	154
   257  0099                     _SPBRG	set	153
   258  0098                     _TXSTAbits	set	152
   259  008C                     _PIE1bits	set	140
   260  0086                     _TRISB	set	134
   261  0085                     _TRISA	set	133
   262  008F                     _OSCCONbits	set	143
   263  0187                     _BAUDCTLbits	set	391
   264  0188                     _ANSEL	set	392
   265  0189                     _ANSELH	set	393
   266  003C                     STR_6:
   267  003C  340D               	retlw	13
   268  003D  3449               	retlw	73	;'I'
   269  003E  346E               	retlw	110	;'n'
   270  003F  3467               	retlw	103	;'g'
   271  0040  3472               	retlw	114	;'r'
   272  0041  3465               	retlw	101	;'e'
   273  0042  3473               	retlw	115	;'s'
   274  0043  3465               	retlw	101	;'e'
   275  0044  3420               	retlw	32	;' '
   276  0045  3465               	retlw	101	;'e'
   277  0046  346C               	retlw	108	;'l'
   278  0047  3420               	retlw	32	;' '
   279  0048  3463               	retlw	99	;'c'
   280  0049  3461               	retlw	97	;'a'
   281  004A  3472               	retlw	114	;'r'
   282  004B  3461               	retlw	97	;'a'
   283  004C  3463               	retlw	99	;'c'
   284  004D  3474               	retlw	116	;'t'
   285  004E  3465               	retlw	101	;'e'
   286  004F  3472               	retlw	114	;'r'
   287  0050  3420               	retlw	32	;' '
   288  0051  3461               	retlw	97	;'a'
   289  0052  3420               	retlw	32	;' '
   290  0053  346D               	retlw	109	;'m'
   291  0054  346F               	retlw	111	;'o'
   292  0055  3473               	retlw	115	;'s'
   293  0056  3474               	retlw	116	;'t'
   294  0057  3472               	retlw	114	;'r'
   295  0058  3461               	retlw	97	;'a'
   296  0059  3472               	retlw	114	;'r'
   297  005A  3420               	retlw	32	;' '
   298  005B  3465               	retlw	101	;'e'
   299  005C  346E               	retlw	110	;'n'
   300  005D  3420               	retlw	32	;' '
   301  005E  3450               	retlw	80	;'P'
   302  005F  344F               	retlw	79	;'O'
   303  0060  3452               	retlw	82	;'R'
   304  0061  3454               	retlw	84	;'T'
   305  0062  3441               	retlw	65	;'A'
   306  0063  340D               	retlw	13
   307  0064  3400               	retlw	0
   308  0065                     STR_7:
   309  0065  340D               	retlw	13
   310  0066  3449               	retlw	73	;'I'
   311  0067  346E               	retlw	110	;'n'
   312  0068  3467               	retlw	103	;'g'
   313  0069  3472               	retlw	114	;'r'
   314  006A  3465               	retlw	101	;'e'
   315  006B  3473               	retlw	115	;'s'
   316  006C  3465               	retlw	101	;'e'
   317  006D  3420               	retlw	32	;' '
   318  006E  3465               	retlw	101	;'e'
   319  006F  346C               	retlw	108	;'l'
   320  0070  3420               	retlw	32	;' '
   321  0071  3463               	retlw	99	;'c'
   322  0072  3461               	retlw	97	;'a'
   323  0073  3472               	retlw	114	;'r'
   324  0074  3461               	retlw	97	;'a'
   325  0075  3463               	retlw	99	;'c'
   326  0076  3474               	retlw	116	;'t'
   327  0077  3465               	retlw	101	;'e'
   328  0078  3472               	retlw	114	;'r'
   329  0079  3420               	retlw	32	;' '
   330  007A  3461               	retlw	97	;'a'
   331  007B  3420               	retlw	32	;' '
   332  007C  346D               	retlw	109	;'m'
   333  007D  346F               	retlw	111	;'o'
   334  007E  3473               	retlw	115	;'s'
   335  007F  3474               	retlw	116	;'t'
   336  0080  3472               	retlw	114	;'r'
   337  0081  3461               	retlw	97	;'a'
   338  0082  3472               	retlw	114	;'r'
   339  0083  3420               	retlw	32	;' '
   340  0084  3465               	retlw	101	;'e'
   341  0085  346E               	retlw	110	;'n'
   342  0086  3420               	retlw	32	;' '
   343  0087  3450               	retlw	80	;'P'
   344  0088  344F               	retlw	79	;'O'
   345  0089  3452               	retlw	82	;'R'
   346  008A  3454               	retlw	84	;'T'
   347  008B  3442               	retlw	66	;'B'
   348  008C  340D               	retlw	13
   349  008D  3400               	retlw	0
   350  008E                     STR_3:
   351  008E  340D               	retlw	13
   352  008F  3428               	retlw	40	;'('
   353  0090  3431               	retlw	49	;'1'
   354  0091  3429               	retlw	41	;')'
   355  0092  3444               	retlw	68	;'D'
   356  0093  3465               	retlw	101	;'e'
   357  0094  3473               	retlw	115	;'s'
   358  0095  3470               	retlw	112	;'p'
   359  0096  346C               	retlw	108	;'l'
   360  0097  3465               	retlw	101	;'e'
   361  0098  3467               	retlw	103	;'g'
   362  0099  3461               	retlw	97	;'a'
   363  009A  3472               	retlw	114	;'r'
   364  009B  3420               	retlw	32	;' '
   365  009C  3463               	retlw	99	;'c'
   366  009D  3461               	retlw	97	;'a'
   367  009E  3464               	retlw	100	;'d'
   368  009F  3465               	retlw	101	;'e'
   369  00A0  346E               	retlw	110	;'n'
   370  00A1  3461               	retlw	97	;'a'
   371  00A2  3420               	retlw	32	;' '
   372  00A3  3464               	retlw	100	;'d'
   373  00A4  3465               	retlw	101	;'e'
   374  00A5  3420               	retlw	32	;' '
   375  00A6  3463               	retlw	99	;'c'
   376  00A7  3461               	retlw	97	;'a'
   377  00A8  3472               	retlw	114	;'r'
   378  00A9  3461               	retlw	97	;'a'
   379  00AA  3463               	retlw	99	;'c'
   380  00AB  3474               	retlw	116	;'t'
   381  00AC  3465               	retlw	101	;'e'
   382  00AD  3472               	retlw	114	;'r'
   383  00AE  3465               	retlw	101	;'e'
   384  00AF  3473               	retlw	115	;'s'
   385  00B0  3400               	retlw	0
   386  00B1                     STR_2:
   387  00B1  3451               	retlw	81	;'Q'
   388  00B2  3475               	retlw	117	;'u'
   389  00B3  3465               	retlw	101	;'e'
   390  00B4  3420               	retlw	32	;' '
   391  00B5  3461               	retlw	97	;'a'
   392  00B6  3463               	retlw	99	;'c'
   393  00B7  3463               	retlw	99	;'c'
   394  00B8  3469               	retlw	105	;'i'
   395  00B9  346F               	retlw	111	;'o'
   396  00BA  346E               	retlw	110	;'n'
   397  00BB  3420               	retlw	32	;' '
   398  00BC  3464               	retlw	100	;'d'
   399  00BD  3465               	retlw	101	;'e'
   400  00BE  3473               	retlw	115	;'s'
   401  00BF  3465               	retlw	101	;'e'
   402  00C0  3461               	retlw	97	;'a'
   403  00C1  3420               	retlw	32	;' '
   404  00C2  3465               	retlw	101	;'e'
   405  00C3  346A               	retlw	106	;'j'
   406  00C4  3465               	retlw	101	;'e'
   407  00C5  3463               	retlw	99	;'c'
   408  00C6  3475               	retlw	117	;'u'
   409  00C7  3474               	retlw	116	;'t'
   410  00C8  3461               	retlw	97	;'a'
   411  00C9  3472               	retlw	114	;'r'
   412  00CA  343F               	retlw	63	;'?'
   413  00CB  3400               	retlw	0
   414  00CC                     STR_4:
   415  00CC  340D               	retlw	13
   416  00CD  3428               	retlw	40	;'('
   417  00CE  3432               	retlw	50	;'2'
   418  00CF  3429               	retlw	41	;')'
   419  00D0  3443               	retlw	67	;'C'
   420  00D1  3461               	retlw	97	;'a'
   421  00D2  346D               	retlw	109	;'m'
   422  00D3  3462               	retlw	98	;'b'
   423  00D4  3469               	retlw	105	;'i'
   424  00D5  3461               	retlw	97	;'a'
   425  00D6  3472               	retlw	114	;'r'
   426  00D7  3420               	retlw	32	;' '
   427  00D8  3450               	retlw	80	;'P'
   428  00D9  344F               	retlw	79	;'O'
   429  00DA  3452               	retlw	82	;'R'
   430  00DB  3454               	retlw	84	;'T'
   431  00DC  3441               	retlw	65	;'A'
   432  00DD  3400               	retlw	0
   433  00DE                     STR_5:
   434  00DE  340D               	retlw	13
   435  00DF  3428               	retlw	40	;'('
   436  00E0  3433               	retlw	51	;'3'
   437  00E1  3429               	retlw	41	;')'
   438  00E2  3443               	retlw	67	;'C'
   439  00E3  3461               	retlw	97	;'a'
   440  00E4  346D               	retlw	109	;'m'
   441  00E5  3462               	retlw	98	;'b'
   442  00E6  3469               	retlw	105	;'i'
   443  00E7  3461               	retlw	97	;'a'
   444  00E8  3472               	retlw	114	;'r'
   445  00E9  3420               	retlw	32	;' '
   446  00EA  3450               	retlw	80	;'P'
   447  00EB  344F               	retlw	79	;'O'
   448  00EC  3452               	retlw	82	;'R'
   449  00ED  3454               	retlw	84	;'T'
   450  00EE  3442               	retlw	66	;'B'
   451  00EF  3400               	retlw	0
   452  00F0                     STR_1:
   453  00F0  340D               	retlw	13
   454  00F1  3468               	retlw	104	;'h'
   455  00F2  346F               	retlw	111	;'o'
   456  00F3  346C               	retlw	108	;'l'
   457  00F4  3461               	retlw	97	;'a'
   458  00F5  3420               	retlw	32	;' '
   459  00F6  346D               	retlw	109	;'m'
   460  00F7  3475               	retlw	117	;'u'
   461  00F8  346E               	retlw	110	;'n'
   462  00F9  3464               	retlw	100	;'d'
   463  00FA  346F               	retlw	111	;'o'
   464  00FB  3421               	retlw	33	;'!'
   465  00FC  340D               	retlw	13
   466  00FD  3400               	retlw	0
   467                           
   468                           	psect	cinit
   469  000F                     start_initialization:	
   470                           ; #config settings
   471                           
   472  000F                     __initialization:
   473                           
   474                           ; Initialize objects allocated to COMMON
   475  000F  120A  118A  227A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   476  0014  00F7               	movwf	__pdataCOMMON& (0+127)
   477  0015  120A  118A  227B  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   478  001A  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   479                           
   480                           ; Clear objects allocated to BANK0
   481  001B  01A0               	clrf	__pbssBANK0& (0+127)
   482  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   483  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   484  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   485  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   486  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   487  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   488  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   489  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   490  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   491  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   492                           
   493                           ; Clear objects allocated to COMMON
   494  0026  01F9               	clrf	__pbssCOMMON& (0+127)
   495  0027                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498  0027                     __end_of__initialization:
   499  0027  0183               	clrf	3
   500  0028  120A  118A  28FE   	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	bssCOMMON
   503  0079                     __pbssCOMMON:
   504  0079                     _opcion:
   505  0079                     	ds	1
   506                           
   507                           	psect	dataCOMMON
   508  0077                     __pdataCOMMON:
   509  0077                     _flag:
   510  0077                     	ds	2
   511                           
   512                           	psect	bssBANK0
   513  0020                     __pbssBANK0:
   514  0020                     _texto:
   515  0020                     	ds	11
   516                           
   517                           	psect	cstackCOMMON
   518  0070                     __pcstackCOMMON:
   519  0070                     ?_setup:
   520  0070                     ?_main:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_isr:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ??_isr:	
   527                           ; 1 bytes @ 0x0
   528                           
   529                           
   530                           ; 1 bytes @ 0x0
   531  0070                     	ds	3
   532  0073                     ??_setup:
   533  0073                     ?_strcpy:	
   534                           ; 1 bytes @ 0x3
   535                           
   536  0073                     ?_strlen:	
   537                           ; 1 bytes @ 0x3
   538                           
   539  0073                     strcpy@from:	
   540                           ; 2 bytes @ 0x3
   541                           
   542  0073                     strlen@s:	
   543                           ; 1 bytes @ 0x3
   544                           
   545                           
   546                           ; 2 bytes @ 0x3
   547  0073                     	ds	1
   548  0074                     ??_strcpy:
   549                           
   550                           ; 1 bytes @ 0x4
   551  0074                     	ds	1
   552  0075                     ??_strlen:
   553  0075                     strcpy@to:	
   554                           ; 1 bytes @ 0x5
   555                           
   556  0075                     strlen@cp:	
   557                           ; 1 bytes @ 0x5
   558                           
   559                           
   560                           ; 2 bytes @ 0x5
   561  0075                     	ds	1
   562  0076                     strcpy@cp:
   563                           
   564                           ; 1 bytes @ 0x6
   565  0076                     	ds	1
   566                           
   567                           	psect	cstackBANK0
   568  002B                     __pcstackBANK0:
   569  002B                     ?_showString:
   570  002B                     showString@var:	
   571                           ; 1 bytes @ 0x0
   572                           
   573                           
   574                           ; 2 bytes @ 0x0
   575  002B                     	ds	2
   576  002D                     ??_showString:
   577                           
   578                           ; 1 bytes @ 0x2
   579  002D                     	ds	3
   580  0030                     showString@i:
   581                           
   582                           ; 2 bytes @ 0x5
   583  0030                     	ds	2
   584  0032                     ??_main:
   585                           
   586                           ; 1 bytes @ 0x7
   587  0032                     	ds	3
   588                           
   589                           	psect	maintext
   590  00FE                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 73 in file "_usart.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : B00/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       3       0       0       0
   613 ;;      Totals:         0       3       0       0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels required when called:    4
   616 ;; This function calls:
   617 ;;		_setup
   618 ;;		_showString
   619 ;;		_strcpy
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _main
   627  00FE                     _main:
   628  00FE                     l926:	
   629                           ;incstack = 0
   630                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   631                           
   632                           
   633                           ;_usart.c: 75:     setup();
   634  00FE  120A  118A  21F5  120A  118A  	fcall	_setup
   635  0103                     l928:
   636                           
   637                           ;_usart.c: 76:     strcpy(texto,"\rhola mundo!\r");
   638  0103  30B6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   639  0104  1283               	bcf	3,5	;RP0=0, select bank0
   640  0105  1303               	bcf	3,6	;RP1=0, select bank0
   641  0106  00B2               	movwf	??_main
   642  0107  0832               	movf	??_main,w
   643  0108  00F3               	movwf	strcpy@from
   644  0109  3020               	movlw	(low (_texto| 0))& (0+255)
   645  010A  120A  118A  2248  120A  118A  	fcall	_strcpy
   646  010F                     l930:
   647                           
   648                           ;_usart.c: 80:     {;_usart.c: 81:         _delay((unsigned long)((200)*(8000000/4000.0)
      +                          ));
   649  010F  3003               	movlw	3
   650  0110  1283               	bcf	3,5	;RP0=0, select bank0
   651  0111  1303               	bcf	3,6	;RP1=0, select bank0
   652  0112  00B4               	movwf	??_main+2
   653  0113  3008               	movlw	8
   654  0114  00B3               	movwf	??_main+1
   655  0115  3076               	movlw	118
   656  0116  00B2               	movwf	??_main
   657  0117                     u347:
   658  0117  0BB2               	decfsz	??_main,f
   659  0118  2917               	goto	u347
   660  0119  0BB3               	decfsz	??_main+1,f
   661  011A  2917               	goto	u347
   662  011B  0BB4               	decfsz	??_main+2,f
   663  011C  2917               	goto	u347
   664  011D  0000               	nop
   665  011E                     l932:
   666                           
   667                           ;_usart.c: 83:         if (PIR1bits.TXIF){
   668  011E  1283               	bcf	3,5	;RP0=0, select bank0
   669  011F  1303               	bcf	3,6	;RP1=0, select bank0
   670  0120  1E0C               	btfss	12,4	;volatile
   671  0121  2923               	goto	u271
   672  0122  2924               	goto	u270
   673  0123                     u271:
   674  0123  290F               	goto	l930
   675  0124                     u270:
   676  0124                     l934:
   677                           
   678                           ;_usart.c: 85:             if(flag){
   679  0124  0877               	movf	_flag,w
   680  0125  0478               	iorwf	_flag+1,w
   681  0126  1903               	btfsc	3,2
   682  0127  2929               	goto	u281
   683  0128  292A               	goto	u280
   684  0129                     u281:
   685  0129  2956               	goto	l940
   686  012A                     u280:
   687  012A                     l936:
   688                           
   689                           ;_usart.c: 86:                 showString("Que accion desea ejecutar?");
   690  012A  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   691  012B  00AB               	movwf	showString@var
   692  012C  3080               	movlw	128
   693  012D  00AC               	movwf	showString@var+1
   694  012E  120A  118A  21B0  120A  118A  	fcall	_showString
   695                           
   696                           ;_usart.c: 87:                 showString("\r(1)Desplegar cadena de caracteres");
   697  0133  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   698  0134  1283               	bcf	3,5	;RP0=0, select bank0
   699  0135  1303               	bcf	3,6	;RP1=0, select bank0
   700  0136  00AB               	movwf	showString@var
   701  0137  3080               	movlw	128
   702  0138  00AC               	movwf	showString@var+1
   703  0139  120A  118A  21B0  120A  118A  	fcall	_showString
   704                           
   705                           ;_usart.c: 88:                 showString("\r(2)Cambiar PORTA");
   706  013E  3092               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   707  013F  1283               	bcf	3,5	;RP0=0, select bank0
   708  0140  1303               	bcf	3,6	;RP1=0, select bank0
   709  0141  00AB               	movwf	showString@var
   710  0142  3080               	movlw	128
   711  0143  00AC               	movwf	showString@var+1
   712  0144  120A  118A  21B0  120A  118A  	fcall	_showString
   713                           
   714                           ;_usart.c: 89:                 showString("\r(3)Cambiar PORTB");
   715  0149  30A4               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   716  014A  1283               	bcf	3,5	;RP0=0, select bank0
   717  014B  1303               	bcf	3,6	;RP1=0, select bank0
   718  014C  00AB               	movwf	showString@var
   719  014D  3080               	movlw	128
   720  014E  00AC               	movwf	showString@var+1
   721  014F  120A  118A  21B0  120A  118A  	fcall	_showString
   722  0154                     l938:
   723                           
   724                           ;_usart.c: 90:                 flag = 0;
   725  0154  01F7               	clrf	_flag
   726  0155  01F8               	clrf	_flag+1
   727  0156                     l940:
   728                           
   729                           ;_usart.c: 92:             if(opcion==49){
   730  0156  3031               	movlw	49
   731  0157  0679               	xorwf	_opcion,w
   732  0158  1D03               	btfss	3,2
   733  0159  295B               	goto	u291
   734  015A  295C               	goto	u290
   735  015B                     u291:
   736  015B  296C               	goto	l948
   737  015C                     u290:
   738  015C                     l942:
   739                           
   740                           ;_usart.c: 93:                 showString(texto);
   741  015C  3020               	movlw	(low (_texto| 0))& (0+255)
   742  015D  1283               	bcf	3,5	;RP0=0, select bank0
   743  015E  1303               	bcf	3,6	;RP1=0, select bank0
   744  015F  00AB               	movwf	showString@var
   745  0160  3000               	movlw	0
   746  0161  00AC               	movwf	showString@var+1
   747  0162  120A  118A  21B0  120A  118A  	fcall	_showString
   748  0167                     l944:
   749                           
   750                           ;_usart.c: 94:                 flag = 1;
   751  0167  3001               	movlw	1
   752  0168  00F7               	movwf	_flag
   753  0169  3000               	movlw	0
   754  016A  00F8               	movwf	_flag+1
   755  016B                     l946:
   756                           
   757                           ;_usart.c: 95:                 opcion = 0;
   758  016B  01F9               	clrf	_opcion
   759  016C                     l948:
   760                           
   761                           ;_usart.c: 97:             if(opcion==50){
   762  016C  3032               	movlw	50
   763  016D  0679               	xorwf	_opcion,w
   764  016E  1D03               	btfss	3,2
   765  016F  2971               	goto	u301
   766  0170  2972               	goto	u300
   767  0171                     u301:
   768  0171  298C               	goto	l962
   769  0172                     u300:
   770  0172                     l950:
   771                           
   772                           ;_usart.c: 98:                 showString("\rIngrese el caracter a mostrar en PORTA\r");
   773  0172  3002               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   774  0173  1283               	bcf	3,5	;RP0=0, select bank0
   775  0174  1303               	bcf	3,6	;RP1=0, select bank0
   776  0175  00AB               	movwf	showString@var
   777  0176  3080               	movlw	128
   778  0177  00AC               	movwf	showString@var+1
   779  0178  120A  118A  21B0  120A  118A  	fcall	_showString
   780  017D                     l952:
   781                           
   782                           ;_usart.c: 100:                 flag = 1;
   783  017D  3001               	movlw	1
   784  017E  00F7               	movwf	_flag
   785  017F  3000               	movlw	0
   786  0180  00F8               	movwf	_flag+1
   787  0181                     l954:
   788                           
   789                           ;_usart.c: 101:                 opcion = 0;
   790  0181  01F9               	clrf	_opcion
   791  0182                     l956:	
   792                           ;_usart.c: 103:                 while(!opcion){
   793                           
   794                           
   795                           ;_usart.c: 103:                 while(!opcion){
   796  0182  0879               	movf	_opcion,w
   797  0183  1903               	btfsc	3,2
   798  0184  2986               	goto	u311
   799  0185  2987               	goto	u310
   800  0186                     u311:
   801  0186  2982               	goto	l956
   802  0187                     u310:
   803  0187                     l958:
   804                           
   805                           ;_usart.c: 107:                 PORTA = opcion;
   806  0187  0879               	movf	_opcion,w
   807  0188  1283               	bcf	3,5	;RP0=0, select bank0
   808  0189  1303               	bcf	3,6	;RP1=0, select bank0
   809  018A  0085               	movwf	5	;volatile
   810  018B                     l960:
   811                           
   812                           ;_usart.c: 108:                 opcion = 0;
   813  018B  01F9               	clrf	_opcion
   814  018C                     l962:
   815                           
   816                           ;_usart.c: 112:             if (opcion==51){
   817  018C  3033               	movlw	51
   818  018D  0679               	xorwf	_opcion,w
   819  018E  1D03               	btfss	3,2
   820  018F  2991               	goto	u321
   821  0190  2992               	goto	u320
   822  0191                     u321:
   823  0191  290F               	goto	l930
   824  0192                     u320:
   825  0192                     l964:
   826                           
   827                           ;_usart.c: 113:                 showString("\rIngrese el caracter a mostrar en PORTB\r")
      +                          ;
   828  0192  302B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   829  0193  1283               	bcf	3,5	;RP0=0, select bank0
   830  0194  1303               	bcf	3,6	;RP1=0, select bank0
   831  0195  00AB               	movwf	showString@var
   832  0196  3080               	movlw	128
   833  0197  00AC               	movwf	showString@var+1
   834  0198  120A  118A  21B0  120A  118A  	fcall	_showString
   835  019D                     l966:
   836                           
   837                           ;_usart.c: 115:                 flag = 1;
   838  019D  3001               	movlw	1
   839  019E  00F7               	movwf	_flag
   840  019F  3000               	movlw	0
   841  01A0  00F8               	movwf	_flag+1
   842  01A1                     l968:
   843                           
   844                           ;_usart.c: 116:                 opcion = 0;
   845  01A1  01F9               	clrf	_opcion
   846  01A2                     l970:	
   847                           ;_usart.c: 118:                 while(!opcion){
   848                           
   849                           
   850                           ;_usart.c: 118:                 while(!opcion){
   851  01A2  0879               	movf	_opcion,w
   852  01A3  1903               	btfsc	3,2
   853  01A4  29A6               	goto	u331
   854  01A5  29A7               	goto	u330
   855  01A6                     u331:
   856  01A6  29A2               	goto	l970
   857  01A7                     u330:
   858  01A7                     l972:
   859                           
   860                           ;_usart.c: 122:                 PORTB = opcion;
   861  01A7  0879               	movf	_opcion,w
   862  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   863  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   864  01AA  0086               	movwf	6	;volatile
   865  01AB                     l974:
   866                           
   867                           ;_usart.c: 123:                 opcion = 0;
   868  01AB  01F9               	clrf	_opcion
   869  01AC  290F               	goto	l930
   870  01AD  120A  118A  280C   	ljmp	start
   871  01B0                     __end_of_main:
   872                           
   873                           	psect	text1
   874  0248                     __ptext1:	
   875 ;; *************** function _strcpy *****************
   876 ;; Defined at:
   877 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcpy.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  to              1    wreg     PTR unsigned char 
   880 ;;		 -> texto(11), 
   881 ;;  from            1    3[COMMON] PTR const unsigned char 
   882 ;;		 -> STR_1(14), 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  to              1    5[COMMON] PTR unsigned char 
   885 ;;		 -> texto(11), 
   886 ;;  cp              1    6[COMMON] PTR unsigned char 
   887 ;;		 -> texto(11), 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      PTR unsigned char 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         1       0       0       0       0
   898 ;;      Locals:         2       0       0       0       0
   899 ;;      Temps:          1       0       0       0       0
   900 ;;      Totals:         4       0       0       0       0
   901 ;;Total ram usage:        4 bytes
   902 ;; Hardware stack levels used:    2
   903 ;; Hardware stack levels required when called:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _strcpy
   913  0248                     _strcpy:
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
   917                           ;strcpy@to stored from wreg
   918  0248  00F5               	movwf	strcpy@to
   919  0249                     l840:
   920  0249  0875               	movf	strcpy@to,w
   921  024A  00F4               	movwf	??_strcpy
   922  024B  0874               	movf	??_strcpy,w
   923  024C  00F6               	movwf	strcpy@cp
   924  024D  2A56               	goto	l844
   925  024E                     l842:
   926  024E  3001               	movlw	1
   927  024F  00F4               	movwf	??_strcpy
   928  0250  0874               	movf	??_strcpy,w
   929  0251  07F6               	addwf	strcpy@cp,f
   930  0252  3001               	movlw	1
   931  0253  00F4               	movwf	??_strcpy
   932  0254  0874               	movf	??_strcpy,w
   933  0255  07F3               	addwf	strcpy@from,f
   934  0256                     l844:
   935  0256  0873               	movf	strcpy@from,w
   936  0257  0084               	movwf	4
   937  0258  120A  118A  2035  120A  118A  	fcall	stringdir
   938  025D  00F4               	movwf	??_strcpy
   939  025E  0876               	movf	strcpy@cp,w
   940  025F  0084               	movwf	4
   941  0260  0874               	movf	??_strcpy,w
   942  0261  1383               	bcf	3,7	;select IRP bank0
   943  0262  0080               	movwf	0
   944  0263  0800               	movf	0,w
   945  0264  1D03               	btfss	3,2
   946  0265  2A67               	goto	u141
   947  0266  2A68               	goto	u140
   948  0267                     u141:
   949  0267  2A4E               	goto	l842
   950  0268                     u140:
   951  0268                     l626:
   952  0268  0008               	return
   953  0269                     __end_of_strcpy:
   954                           
   955                           	psect	text2
   956  01B0                     __ptext2:	
   957 ;; *************** function _showString *****************
   958 ;; Defined at:
   959 ;;		line 186 in file "_usart.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  var             2    0[BANK0 ] PTR unsigned char 
   962 ;;		 -> STR_7(41), STR_6(41), STR_5(18), STR_4(18), 
   963 ;;		 -> STR_3(35), STR_2(27), texto(11), 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  i               2    5[BANK0 ] int 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       2       0       0       0
   976 ;;      Locals:         0       2       0       0       0
   977 ;;      Temps:          0       3       0       0       0
   978 ;;      Totals:         0       7       0       0       0
   979 ;;Total ram usage:        7 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    3
   982 ;; This function calls:
   983 ;;		_strlen
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _showString
   991  01B0                     _showString:
   992  01B0                     l916:	
   993                           ;incstack = 0
   994                           ; Regs used in _showString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   995                           
   996                           
   997                           ;_usart.c: 187:     int i;;_usart.c: 189:     for (i = 0; i < strlen(var); i++) {
   998  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   999  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1000  01B2  01B0               	clrf	showString@i
  1001  01B3  01B1               	clrf	showString@i+1
  1002  01B4  29DF               	goto	l924
  1003  01B5                     l918:
  1004                           
  1005                           ;_usart.c: 190:         TXREG = var[i];
  1006  01B5  0830               	movf	showString@i,w
  1007  01B6  072B               	addwf	showString@var,w
  1008  01B7  00AE               	movwf	??_showString+1
  1009  01B8  082C               	movf	showString@var+1,w
  1010  01B9  00AD               	movwf	??_showString
  1011  01BA  1803               	skipnc
  1012  01BB  0AAD               	incf	??_showString,f
  1013  01BC  1FB0               	btfss	showString@i,7
  1014  01BD  29BF               	goto	u250
  1015  01BE  03AD               	decf	??_showString,f
  1016  01BF                     u250:
  1017  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1018  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1019  01C1  082D               	movf	??_showString,w
  1020  01C2  00AF               	movwf	??_showString+2
  1021  01C3  082F               	movf	??_showString+2,w
  1022  01C4  00FF               	movwf	btemp+1
  1023  01C5  082E               	movf	??_showString+1,w
  1024  01C6  0084               	movwf	4
  1025  01C7  120A  118A  202B  120A  118A  	fcall	stringtab
  1026  01CC  0099               	movwf	25	;volatile
  1027  01CD                     l920:
  1028                           
  1029                           ;_usart.c: 191:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1030  01CD  300D               	movlw	13
  1031  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1032  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1033  01D0  00AE               	movwf	??_showString+1
  1034  01D1  30FB               	movlw	251
  1035  01D2  00AD               	movwf	??_showString
  1036  01D3                     u357:
  1037  01D3  0BAD               	decfsz	??_showString,f
  1038  01D4  29D3               	goto	u357
  1039  01D5  0BAE               	decfsz	??_showString+1,f
  1040  01D6  29D3               	goto	u357
  1041  01D7                     l922:
  1042                           
  1043                           ;_usart.c: 192:     }
  1044  01D7  3001               	movlw	1
  1045  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1046  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1047  01DA  07B0               	addwf	showString@i,f
  1048  01DB  1803               	skipnc
  1049  01DC  0AB1               	incf	showString@i+1,f
  1050  01DD  3000               	movlw	0
  1051  01DE  07B1               	addwf	showString@i+1,f
  1052  01DF                     l924:
  1053  01DF  082B               	movf	showString@var,w
  1054  01E0  00F3               	movwf	strlen@s
  1055  01E1  082C               	movf	showString@var+1,w
  1056  01E2  00F4               	movwf	strlen@s+1
  1057  01E3  120A  118A  2224  120A  118A  	fcall	_strlen
  1058  01E8  0874               	movf	?_strlen+1,w
  1059  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1060  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1061  01EB  0231               	subwf	showString@i+1,w
  1062  01EC  1D03               	skipz
  1063  01ED  29F0               	goto	u265
  1064  01EE  0873               	movf	?_strlen,w
  1065  01EF  0230               	subwf	showString@i,w
  1066  01F0                     u265:
  1067  01F0  1C03               	skipc
  1068  01F1  29F3               	goto	u261
  1069  01F2  29F4               	goto	u260
  1070  01F3                     u261:
  1071  01F3  29B5               	goto	l918
  1072  01F4                     u260:
  1073  01F4                     l86:
  1074  01F4  0008               	return
  1075  01F5                     __end_of_showString:
  1076                           
  1077                           	psect	text3
  1078  0224                     __ptext3:	
  1079 ;; *************** function _strlen *****************
  1080 ;; Defined at:
  1081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  s               2    3[COMMON] PTR const unsigned char 
  1084 ;;		 -> STR_7(41), STR_6(41), STR_5(18), STR_4(18), 
  1085 ;;		 -> STR_3(35), STR_2(27), texto(11), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  cp              2    5[COMMON] PTR const unsigned char 
  1088 ;;		 -> STR_7(41), STR_6(41), STR_5(18), STR_4(18), 
  1089 ;;		 -> STR_3(35), STR_2(27), texto(11), 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2    3[COMMON] unsigned int 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         2       0       0       0       0
  1100 ;;      Locals:         2       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         4       0       0       0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used:    2
  1105 ;; Hardware stack levels required when called:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_showString
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _strlen
  1115  0224                     _strlen:
  1116  0224                     l906:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1119                           
  1120  0224  0873               	movf	strlen@s,w
  1121  0225  00F5               	movwf	strlen@cp
  1122  0226  0874               	movf	strlen@s+1,w
  1123  0227  00F6               	movwf	strlen@cp+1
  1124  0228  2A2F               	goto	l910
  1125  0229                     l908:
  1126  0229  3001               	movlw	1
  1127  022A  07F5               	addwf	strlen@cp,f
  1128  022B  1803               	skipnc
  1129  022C  0AF6               	incf	strlen@cp+1,f
  1130  022D  3000               	movlw	0
  1131  022E  07F6               	addwf	strlen@cp+1,f
  1132  022F                     l910:
  1133  022F  0876               	movf	strlen@cp+1,w
  1134  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0232  00FF               	movwf	btemp+1
  1137  0233  0875               	movf	strlen@cp,w
  1138  0234  0084               	movwf	4
  1139  0235  120A  118A  202B  120A  118A  	fcall	stringtab
  1140  023A  3A00               	xorlw	0
  1141  023B  1D03               	skipz
  1142  023C  2A3E               	goto	u241
  1143  023D  2A3F               	goto	u240
  1144  023E                     u241:
  1145  023E  2A29               	goto	l908
  1146  023F                     u240:
  1147  023F                     l912:
  1148  023F  0873               	movf	strlen@s,w
  1149  0240  0275               	subwf	strlen@cp,w
  1150  0241  00F3               	movwf	?_strlen
  1151  0242  0874               	movf	strlen@s+1,w
  1152  0243  1C03               	skipc
  1153  0244  0A74               	incf	strlen@s+1,w
  1154  0245  0276               	subwf	strlen@cp+1,w
  1155  0246  00F4               	movwf	?_strlen+1
  1156  0247                     l632:
  1157  0247  0008               	return
  1158  0248                     __end_of_strlen:
  1159                           
  1160                           	psect	text4
  1161  01F5                     __ptext4:	
  1162 ;; *************** function _setup *****************
  1163 ;; Defined at:
  1164 ;;		line 144 in file "_usart.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _setup
  1194  01F5                     _setup:
  1195  01F5                     l810:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _setup: [wreg+status,2]
  1198                           
  1199                           
  1200                           ;_usart.c: 147:     OSCCONbits.IRCF2 = 1;
  1201  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1202  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  1203  01F7  170F               	bsf	15,6	;volatile
  1204                           
  1205                           ;_usart.c: 148:     OSCCONbits.IRCF1 = 1;
  1206  01F8  168F               	bsf	15,5	;volatile
  1207                           
  1208                           ;_usart.c: 149:     OSCCONbits.IRCF0 = 1;
  1209  01F9  160F               	bsf	15,4	;volatile
  1210                           
  1211                           ;_usart.c: 150:     OSCCONbits.SCS = 1;
  1212  01FA  140F               	bsf	15,0	;volatile
  1213  01FB                     l812:
  1214                           
  1215                           ;_usart.c: 153:     ANSELH = 0x00;
  1216  01FB  1683               	bsf	3,5	;RP0=1, select bank3
  1217  01FC  1703               	bsf	3,6	;RP1=1, select bank3
  1218  01FD  0189               	clrf	9	;volatile
  1219                           
  1220                           ;_usart.c: 154:     ANSEL = 0x00;
  1221  01FE  0188               	clrf	8	;volatile
  1222                           
  1223                           ;_usart.c: 156:     TRISA = 0x00;
  1224  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1225  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1226  0201  0185               	clrf	5	;volatile
  1227                           
  1228                           ;_usart.c: 157:     TRISB = 0x00;
  1229  0202  0186               	clrf	6	;volatile
  1230                           
  1231                           ;_usart.c: 158:     PORTA = 0x00;
  1232  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0205  0185               	clrf	5	;volatile
  1235                           
  1236                           ;_usart.c: 159:     PORTB = 0x00;
  1237  0206  0186               	clrf	6	;volatile
  1238  0207                     l814:
  1239                           
  1240                           ;_usart.c: 162:     INTCONbits.GIE = 1;
  1241  0207  178B               	bsf	11,7	;volatile
  1242  0208                     l816:
  1243                           
  1244                           ;_usart.c: 163:     INTCONbits.PEIE = 1;
  1245  0208  170B               	bsf	11,6	;volatile
  1246  0209                     l818:
  1247                           
  1248                           ;_usart.c: 164:     PIE1bits.RCIE = 1;
  1249  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1250  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1251  020B  168C               	bsf	12,5	;volatile
  1252  020C                     l820:
  1253                           
  1254                           ;_usart.c: 165:     PIR1bits.RCIF = 0;
  1255  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1256  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1257  020E  128C               	bcf	12,5	;volatile
  1258  020F                     l822:
  1259                           
  1260                           ;_usart.c: 169:     TXSTAbits.SYNC = 0;
  1261  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0211  1218               	bcf	24,4	;volatile
  1264  0212                     l824:
  1265                           
  1266                           ;_usart.c: 170:     TXSTAbits.BRGH = 1;
  1267  0212  1518               	bsf	24,2	;volatile
  1268  0213                     l826:
  1269                           
  1270                           ;_usart.c: 172:     BAUDCTLbits.BRG16 = 1;
  1271  0213  1683               	bsf	3,5	;RP0=1, select bank3
  1272  0214  1703               	bsf	3,6	;RP1=1, select bank3
  1273  0215  1587               	bsf	7,3	;volatile
  1274  0216                     l828:
  1275                           
  1276                           ;_usart.c: 174:     SPBRG = 207;
  1277  0216  30CF               	movlw	207
  1278  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0219  0099               	movwf	25	;volatile
  1281  021A                     l830:
  1282                           
  1283                           ;_usart.c: 175:     SPBRGH = 0;
  1284  021A  019A               	clrf	26	;volatile
  1285  021B                     l832:
  1286                           
  1287                           ;_usart.c: 177:     RCSTAbits.SPEN = 1;
  1288  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1289  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1290  021D  1798               	bsf	24,7	;volatile
  1291  021E                     l834:
  1292                           
  1293                           ;_usart.c: 178:     RCSTAbits.RX9 = 0;
  1294  021E  1318               	bcf	24,6	;volatile
  1295  021F                     l836:
  1296                           
  1297                           ;_usart.c: 179:     RCSTAbits.CREN = 1;
  1298  021F  1618               	bsf	24,4	;volatile
  1299  0220                     l838:
  1300                           
  1301                           ;_usart.c: 181:     TXSTAbits.TXEN = 1;
  1302  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1303  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1304  0222  1698               	bsf	24,5	;volatile
  1305  0223                     l80:
  1306  0223  0008               	return
  1307  0224                     __end_of_setup:
  1308                           
  1309                           	psect	text5
  1310  0269                     __ptext5:	
  1311 ;; *************** function _isr *****************
  1312 ;; Defined at:
  1313 ;;		line 132 in file "_usart.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          3       0       0       0       0
  1330 ;;      Totals:         3       0       0       0       0
  1331 ;;Total ram usage:        3 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		Interrupt level 1
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _isr
  1342  0269                     _isr:
  1343  0269                     i1l796:
  1344                           
  1345                           ;_usart.c: 134:     if (PIR1bits.RCIF){
  1346  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1347  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1348  026B  1E8C               	btfss	12,5	;volatile
  1349  026C  2A6E               	goto	u12_21
  1350  026D  2A6F               	goto	u12_20
  1351  026E                     u12_21:
  1352  026E  2A73               	goto	i1l77
  1353  026F                     u12_20:
  1354  026F                     i1l798:
  1355                           
  1356                           ;_usart.c: 135:         opcion = RCREG;
  1357  026F  081A               	movf	26,w	;volatile
  1358  0270  00F0               	movwf	??_isr
  1359  0271  0870               	movf	??_isr,w
  1360  0272  00F9               	movwf	_opcion
  1361  0273                     i1l77:
  1362  0273  0872               	movf	??_isr+2,w
  1363  0274  008A               	movwf	10
  1364  0275  0E71               	swapf	??_isr+1,w
  1365  0276  0083               	movwf	3
  1366  0277  0EFE               	swapf	btemp,f
  1367  0278  0E7E               	swapf	btemp,w
  1368  0279  0009               	retfie
  1369  027A                     __end_of_isr:
  1370  007E                     btemp	set	126	;btemp
  1371  007E                     wtemp0	set	126
  1372                           
  1373                           	psect	intentry
  1374  0004                     __pintentry:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _isr: [wreg]
  1377                           
  1378  0004                     interrupt_function:
  1379  007E                     saved_w	set	btemp
  1380  0004  00FE               	movwf	btemp
  1381  0005  0E03               	swapf	3,w
  1382  0006  00F1               	movwf	??_isr+1
  1383  0007  080A               	movf	10,w
  1384  0008  00F2               	movwf	??_isr+2
  1385  0009  120A  118A  2A69   	ljmp	_isr
  1386                           
  1387                           	psect	config
  1388                           
  1389                           ;Config register CONFIG1 @ 0x2007
  1390                           ;	Oscillator Selection bits
  1391                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1392                           ;	Watchdog Timer Enable bit
  1393                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1394                           ;	Power-up Timer Enable bit
  1395                           ;	PWRTE = ON, PWRT enabled
  1396                           ;	RE3/MCLR pin function select bit
  1397                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1398                           ;	Code Protection bit
  1399                           ;	CP = OFF, Program memory code protection is disabled
  1400                           ;	Data Code Protection bit
  1401                           ;	CPD = OFF, Data memory code protection is disabled
  1402                           ;	Brown Out Reset Selection bits
  1403                           ;	BOREN = OFF, BOR disabled
  1404                           ;	Internal External Switchover bit
  1405                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1406                           ;	Fail-Safe Clock Monitor Enabled bit
  1407                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1408                           ;	Low Voltage Programming Enable bit
  1409                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1410                           ;	In-Circuit Debugger Mode bit
  1411                           ;	DEBUG = 0x1, unprogrammed default
  1412  2007                     	org	8199
  1413  2007  20C4               	dw	8388
  1414                           
  1415                           ;Config register CONFIG2 @ 0x2008
  1416                           ;	Brown-out Reset Selection bit
  1417                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1418                           ;	Flash Program Memory Self Write Enable bits
  1419                           ;	WRT = OFF, Write protection off
  1420  2008                     	org	8200
  1421  2008  3FFF               	dw	16383

Data Sizes:
    Strings     194
    Constant    1
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     10      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_7(CODE[41]), STR_6(CODE[41]), STR_5(CODE[18]), STR_4(CODE[18]), 
		 -> STR_3(CODE[35]), STR_2(CODE[27]), texto(BANK0[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_7(CODE[41]), STR_6(CODE[41]), STR_5(CODE[18]), STR_4(CODE[18]), 
		 -> STR_3(CODE[35]), STR_2(CODE[27]), texto(BANK0[11]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 11
		 -> texto(BANK0[11]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 11
		 -> texto(BANK0[11]), 

    showString@var	PTR unsigned char  size(2) Largest target is 41
		 -> STR_7(CODE[41]), STR_6(CODE[41]), STR_5(CODE[18]), STR_4(CODE[18]), 
		 -> STR_3(CODE[35]), STR_2(CODE[27]), texto(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 11
		 -> texto(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_strcpy
    _showString->_strlen

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_showString

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1164
                                              7 BANK0      3     3      0
                              _setup
                         _showString
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     184
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _showString                                           7     5      2     980
                                              0 BANK0      7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     220
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _showString
     _strlen
   _strcpy

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed May 26 00:21:27 2021

                      pc 0002                       l80 0223                       l86 01F4  
                     fsr 0004                      l632 0247                      l810 01F5  
                    l626 0268                      l820 020C                      l812 01FB  
                    l830 021A                      l822 020F                      l814 0207  
                    l910 022F                      l832 021B                      l824 0212  
                    l816 0208                      l912 023F                      l920 01CD  
                    l840 0249                      l834 021E                      l826 0213  
                    l818 0209                      l906 0224                      l922 01D7  
                    l842 024E                      l930 010F                      l836 021F  
                    l828 0216                      l908 0229                      l924 01DF  
                    l916 01B0                      l844 0256                      l940 0156  
                    l932 011E                      l838 0220                      l918 01B5  
                    l950 0172                      l942 015C                      l934 0124  
                    l926 00FE                      l960 018B                      l952 017D  
                    l944 0167                      l936 012A                      l928 0103  
                    l970 01A2                      l954 0181                      l962 018C  
                    l946 016B                      l938 0154                      l972 01A7  
                    l964 0192                      l956 0182                      l948 016C  
                    l974 01AB                      l966 019D                      l958 0187  
                    l968 01A1                      u140 0268                      u300 0172  
                    u141 0267                      u301 0171                      u310 0187  
                    u311 0186                      u240 023F                      u320 0192  
                    u241 023E                      u321 0191                      u250 01BF  
                    u330 01A7                      u331 01A6                      u260 01F4  
                    u261 01F3                      u270 0124                      u271 0123  
                    u280 012A                      u265 01F0                      u281 0129  
                    u290 015C                      u291 015B                      u347 0117  
                    u357 01D3                      _isr 0269                      fsr0 0004  
                    indf 0000            showString@var 002B                     ?_isr 0070  
                   STR_1 00F0                     STR_2 00B1                     STR_3 008E  
                   STR_4 00CC                     STR_5 00DE                     STR_6 003C  
                   STR_7 0065                     i1l77 0273                     _data 003B  
                   _flag 0077                     _main 00FE                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l796 0269                    i1l798 026F  
                  _RCREG 001A                    u12_20 026F                    u12_21 026E  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  _setup 01F5                    _texto 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_data 003C             __end_of_main 01B0                   ??_main 0032  
                 ?_setup 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _opcion 0079                   _strcpy 0248                   _strlen 0224  
           __pdataCOMMON 0077                   saved_w 007E  __end_of__initialization 0027  
         __pcstackCOMMON 0070            __end_of_setup 0224                  ??_setup 0073  
             __pbssBANK0 0020               __pmaintext 00FE               __pintentry 0004  
                ?_strcpy 0073                  ?_strlen 0073               __stringtab 002B  
                __ptext1 0248                  __ptext2 01B0                  __ptext3 0224  
                __ptext4 01F5                  __ptext5 0269          __size_of_strcpy 0021  
        __size_of_strlen 0024             __size_of_isr 0011     end_of_initialization 0027  
              _RCSTAbits 0018                  strlen@s 0073               _showString 01B0  
            showString@i 0030                _TXSTAbits 0098            __pidataCOMMON 027A  
            _BAUDCTLbits 0187           __end_of_strcpy 0269           __end_of_strlen 0248  
    start_initialization 000F              __end_of_isr 027A              ?_showString 002B  
               ??_strcpy 0074                 ??_strlen 0075              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 002B                __pstrings 002B  
         __size_of_setup 002F        interrupt_function 0004      __size_of_showString 0045  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 003A  
     __end_of__stringtab 003B               strcpy@from 0073            __size_of_main 00B2  
           ??_showString 002D               _INTCONbits 000B                 intlevel1 0000  
     __end_of_showString 01F5                stringcode 0035               _OSCCONbits 008F  
               strcpy@cp 0076                 strlen@cp 0075                 strcpy@to 0075  
               stringdir 0035                 stringtab 002B  
