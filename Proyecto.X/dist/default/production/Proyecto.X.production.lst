

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 25 13:02:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  0268                     __pidataCOMMON:
   215                           
   216                           ;initializer for _flag
   217  0268  3401               	retlw	1
   218  0269  3400               	retlw	0
   219                           
   220                           	psect	strings
   221  002B                     __pstrings:
   222  002B                     stringtab:
   223  002B                     __stringtab:
   224                           
   225                           ;	String table - string pointers are 1 byte each
   226  002B  1BFF               	btfsc	btemp+1,7
   227  002C  2835               	ljmp	stringcode
   228  002D  1383               	bcf	3,7
   229  002E  187F               	btfsc	btemp+1,0
   230  002F  1783               	bsf	3,7
   231  0030  0800               	movf	0,w
   232  0031  0A84               	incf	4,f
   233  0032  1903               	skipnz
   234  0033  0AFF               	incf	btemp+1,f
   235  0034  0008               	return
   236  0035                     stringcode:
   237  0035                     stringdir:
   238  0035  3000               	movlw	high stringdir
   239  0036  008A               	movwf	10
   240  0037  0804               	movf	4,w
   241  0038  0A84               	incf	4,f
   242  0039  0782               	addwf	2,f
   243  003A                     __stringbase:
   244  003A  3400               	retlw	0
   245  003B                     __end_of__stringtab:
   246  003B                     _data:
   247  003B  3461               	retlw	97
   248  003C                     __end_of_data:
   249  0019                     _TXREG	set	25
   250  0018                     _RCSTAbits	set	24
   251  000B                     _INTCONbits	set	11
   252  001A                     _RCREG	set	26
   253  0006                     _PORTB	set	6
   254  0005                     _PORTA	set	5
   255  000C                     _PIR1bits	set	12
   256  009A                     _SPBRGH	set	154
   257  0099                     _SPBRG	set	153
   258  0098                     _TXSTAbits	set	152
   259  008C                     _PIE1bits	set	140
   260  0086                     _TRISB	set	134
   261  0085                     _TRISA	set	133
   262  008F                     _OSCCONbits	set	143
   263  0187                     _BAUDCTLbits	set	391
   264  0188                     _ANSEL	set	392
   265  0189                     _ANSELH	set	393
   266  003C                     STR_6:
   267  003C  3449               	retlw	73	;'I'
   268  003D  346E               	retlw	110	;'n'
   269  003E  3467               	retlw	103	;'g'
   270  003F  3472               	retlw	114	;'r'
   271  0040  3465               	retlw	101	;'e'
   272  0041  3473               	retlw	115	;'s'
   273  0042  3465               	retlw	101	;'e'
   274  0043  3420               	retlw	32	;' '
   275  0044  3465               	retlw	101	;'e'
   276  0045  346C               	retlw	108	;'l'
   277  0046  3420               	retlw	32	;' '
   278  0047  3463               	retlw	99	;'c'
   279  0048  3461               	retlw	97	;'a'
   280  0049  3472               	retlw	114	;'r'
   281  004A  3461               	retlw	97	;'a'
   282  004B  3463               	retlw	99	;'c'
   283  004C  3474               	retlw	116	;'t'
   284  004D  3465               	retlw	101	;'e'
   285  004E  3472               	retlw	114	;'r'
   286  004F  3420               	retlw	32	;' '
   287  0050  3461               	retlw	97	;'a'
   288  0051  3420               	retlw	32	;' '
   289  0052  346D               	retlw	109	;'m'
   290  0053  346F               	retlw	111	;'o'
   291  0054  3473               	retlw	115	;'s'
   292  0055  3474               	retlw	116	;'t'
   293  0056  3472               	retlw	114	;'r'
   294  0057  3461               	retlw	97	;'a'
   295  0058  3472               	retlw	114	;'r'
   296  0059  3420               	retlw	32	;' '
   297  005A  3465               	retlw	101	;'e'
   298  005B  346E               	retlw	110	;'n'
   299  005C  3420               	retlw	32	;' '
   300  005D  3450               	retlw	80	;'P'
   301  005E  344F               	retlw	79	;'O'
   302  005F  3452               	retlw	82	;'R'
   303  0060  3454               	retlw	84	;'T'
   304  0061  3441               	retlw	65	;'A'
   305  0062  3400               	retlw	0
   306  0063                     STR_7:
   307  0063  3449               	retlw	73	;'I'
   308  0064  346E               	retlw	110	;'n'
   309  0065  3467               	retlw	103	;'g'
   310  0066  3472               	retlw	114	;'r'
   311  0067  3465               	retlw	101	;'e'
   312  0068  3473               	retlw	115	;'s'
   313  0069  3465               	retlw	101	;'e'
   314  006A  3420               	retlw	32	;' '
   315  006B  3465               	retlw	101	;'e'
   316  006C  346C               	retlw	108	;'l'
   317  006D  3420               	retlw	32	;' '
   318  006E  3463               	retlw	99	;'c'
   319  006F  3461               	retlw	97	;'a'
   320  0070  3472               	retlw	114	;'r'
   321  0071  3461               	retlw	97	;'a'
   322  0072  3463               	retlw	99	;'c'
   323  0073  3474               	retlw	116	;'t'
   324  0074  3465               	retlw	101	;'e'
   325  0075  3472               	retlw	114	;'r'
   326  0076  3420               	retlw	32	;' '
   327  0077  3461               	retlw	97	;'a'
   328  0078  3420               	retlw	32	;' '
   329  0079  346D               	retlw	109	;'m'
   330  007A  346F               	retlw	111	;'o'
   331  007B  3473               	retlw	115	;'s'
   332  007C  3474               	retlw	116	;'t'
   333  007D  3472               	retlw	114	;'r'
   334  007E  3461               	retlw	97	;'a'
   335  007F  3472               	retlw	114	;'r'
   336  0080  3420               	retlw	32	;' '
   337  0081  3465               	retlw	101	;'e'
   338  0082  346E               	retlw	110	;'n'
   339  0083  3420               	retlw	32	;' '
   340  0084  3450               	retlw	80	;'P'
   341  0085  344F               	retlw	79	;'O'
   342  0086  3452               	retlw	82	;'R'
   343  0087  3454               	retlw	84	;'T'
   344  0088  3442               	retlw	66	;'B'
   345  0089  3400               	retlw	0
   346  008A                     STR_3:
   347  008A  3428               	retlw	40	;'('
   348  008B  3431               	retlw	49	;'1'
   349  008C  3429               	retlw	41	;')'
   350  008D  3444               	retlw	68	;'D'
   351  008E  3465               	retlw	101	;'e'
   352  008F  3473               	retlw	115	;'s'
   353  0090  3470               	retlw	112	;'p'
   354  0091  346C               	retlw	108	;'l'
   355  0092  3465               	retlw	101	;'e'
   356  0093  3467               	retlw	103	;'g'
   357  0094  3461               	retlw	97	;'a'
   358  0095  3472               	retlw	114	;'r'
   359  0096  3420               	retlw	32	;' '
   360  0097  3463               	retlw	99	;'c'
   361  0098  3461               	retlw	97	;'a'
   362  0099  3464               	retlw	100	;'d'
   363  009A  3465               	retlw	101	;'e'
   364  009B  346E               	retlw	110	;'n'
   365  009C  3461               	retlw	97	;'a'
   366  009D  3420               	retlw	32	;' '
   367  009E  3464               	retlw	100	;'d'
   368  009F  3465               	retlw	101	;'e'
   369  00A0  3420               	retlw	32	;' '
   370  00A1  3463               	retlw	99	;'c'
   371  00A2  3461               	retlw	97	;'a'
   372  00A3  3472               	retlw	114	;'r'
   373  00A4  3461               	retlw	97	;'a'
   374  00A5  3463               	retlw	99	;'c'
   375  00A6  3474               	retlw	116	;'t'
   376  00A7  3465               	retlw	101	;'e'
   377  00A8  3472               	retlw	114	;'r'
   378  00A9  3465               	retlw	101	;'e'
   379  00AA  3473               	retlw	115	;'s'
   380  00AB  3400               	retlw	0
   381  00AC                     STR_2:
   382  00AC  3451               	retlw	81	;'Q'
   383  00AD  3475               	retlw	117	;'u'
   384  00AE  3465               	retlw	101	;'e'
   385  00AF  3420               	retlw	32	;' '
   386  00B0  3461               	retlw	97	;'a'
   387  00B1  3463               	retlw	99	;'c'
   388  00B2  3463               	retlw	99	;'c'
   389  00B3  3469               	retlw	105	;'i'
   390  00B4  346F               	retlw	111	;'o'
   391  00B5  346E               	retlw	110	;'n'
   392  00B6  3420               	retlw	32	;' '
   393  00B7  3464               	retlw	100	;'d'
   394  00B8  3465               	retlw	101	;'e'
   395  00B9  3473               	retlw	115	;'s'
   396  00BA  3465               	retlw	101	;'e'
   397  00BB  3461               	retlw	97	;'a'
   398  00BC  3420               	retlw	32	;' '
   399  00BD  3465               	retlw	101	;'e'
   400  00BE  346A               	retlw	106	;'j'
   401  00BF  3465               	retlw	101	;'e'
   402  00C0  3463               	retlw	99	;'c'
   403  00C1  3475               	retlw	117	;'u'
   404  00C2  3474               	retlw	116	;'t'
   405  00C3  3461               	retlw	97	;'a'
   406  00C4  3472               	retlw	114	;'r'
   407  00C5  343F               	retlw	63	;'?'
   408  00C6  3400               	retlw	0
   409  00C7                     STR_4:
   410  00C7  3428               	retlw	40	;'('
   411  00C8  3432               	retlw	50	;'2'
   412  00C9  3429               	retlw	41	;')'
   413  00CA  3443               	retlw	67	;'C'
   414  00CB  3461               	retlw	97	;'a'
   415  00CC  346D               	retlw	109	;'m'
   416  00CD  3462               	retlw	98	;'b'
   417  00CE  3469               	retlw	105	;'i'
   418  00CF  3461               	retlw	97	;'a'
   419  00D0  3472               	retlw	114	;'r'
   420  00D1  3420               	retlw	32	;' '
   421  00D2  3450               	retlw	80	;'P'
   422  00D3  344F               	retlw	79	;'O'
   423  00D4  3452               	retlw	82	;'R'
   424  00D5  3454               	retlw	84	;'T'
   425  00D6  3441               	retlw	65	;'A'
   426  00D7  3400               	retlw	0
   427  00D8                     STR_5:
   428  00D8  3428               	retlw	40	;'('
   429  00D9  3433               	retlw	51	;'3'
   430  00DA  3429               	retlw	41	;')'
   431  00DB  3443               	retlw	67	;'C'
   432  00DC  3461               	retlw	97	;'a'
   433  00DD  346D               	retlw	109	;'m'
   434  00DE  3462               	retlw	98	;'b'
   435  00DF  3469               	retlw	105	;'i'
   436  00E0  3461               	retlw	97	;'a'
   437  00E1  3472               	retlw	114	;'r'
   438  00E2  3420               	retlw	32	;' '
   439  00E3  3450               	retlw	80	;'P'
   440  00E4  344F               	retlw	79	;'O'
   441  00E5  3452               	retlw	82	;'R'
   442  00E6  3454               	retlw	84	;'T'
   443  00E7  3442               	retlw	66	;'B'
   444  00E8  3400               	retlw	0
   445  00E9                     STR_1:
   446  00E9  3468               	retlw	104	;'h'
   447  00EA  346F               	retlw	111	;'o'
   448  00EB  346C               	retlw	108	;'l'
   449  00EC  3461               	retlw	97	;'a'
   450  00ED  3420               	retlw	32	;' '
   451  00EE  346D               	retlw	109	;'m'
   452  00EF  3475               	retlw	117	;'u'
   453  00F0  346E               	retlw	110	;'n'
   454  00F1  3464               	retlw	100	;'d'
   455  00F2  346F               	retlw	111	;'o'
   456  00F3  3421               	retlw	33	;'!'
   457  00F4  3420               	retlw	32	;' '
   458  00F5  3400               	retlw	0
   459                           
   460                           	psect	cinit
   461  000F                     start_initialization:	
   462                           ; #config settings
   463                           
   464  000F                     __initialization:
   465                           
   466                           ; Initialize objects allocated to COMMON
   467  000F  120A  118A  2268  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   468  0014  00F7               	movwf	__pdataCOMMON& (0+127)
   469  0015  120A  118A  2269  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   470  001A  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK0
   473  001B  01A0               	clrf	__pbssBANK0& (0+127)
   474  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   475  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   476  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   477  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   478  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   479  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   480  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   481  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   482  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   483  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   484                           
   485                           ; Clear objects allocated to COMMON
   486  0026  01F9               	clrf	__pbssCOMMON& (0+127)
   487  0027                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490  0027                     __end_of__initialization:
   491  0027  0183               	clrf	3
   492  0028  120A  118A  28F6   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssCOMMON
   495  0079                     __pbssCOMMON:
   496  0079                     _opcion:
   497  0079                     	ds	1
   498                           
   499                           	psect	dataCOMMON
   500  0077                     __pdataCOMMON:
   501  0077                     _flag:
   502  0077                     	ds	2
   503                           
   504                           	psect	bssBANK0
   505  0020                     __pbssBANK0:
   506  0020                     _texto:
   507  0020                     	ds	11
   508                           
   509                           	psect	cstackCOMMON
   510  0070                     __pcstackCOMMON:
   511  0070                     ?_setup:
   512  0070                     ?_main:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_isr:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_isr:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523  0070                     	ds	3
   524  0073                     ??_setup:
   525  0073                     ?_strcpy:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     ?_strlen:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     strcpy@from:	
   532                           ; 2 bytes @ 0x3
   533                           
   534  0073                     strlen@s:	
   535                           ; 1 bytes @ 0x3
   536                           
   537                           
   538                           ; 2 bytes @ 0x3
   539  0073                     	ds	1
   540  0074                     ??_strcpy:
   541                           
   542                           ; 1 bytes @ 0x4
   543  0074                     	ds	1
   544  0075                     ??_strlen:
   545  0075                     strcpy@to:	
   546                           ; 1 bytes @ 0x5
   547                           
   548  0075                     strlen@cp:	
   549                           ; 1 bytes @ 0x5
   550                           
   551                           
   552                           ; 2 bytes @ 0x5
   553  0075                     	ds	1
   554  0076                     strcpy@cp:
   555                           
   556                           ; 1 bytes @ 0x6
   557  0076                     	ds	1
   558                           
   559                           	psect	cstackBANK0
   560  002B                     __pcstackBANK0:
   561  002B                     ?_showString:
   562  002B                     showString@var:	
   563                           ; 1 bytes @ 0x0
   564                           
   565                           
   566                           ; 2 bytes @ 0x0
   567  002B                     	ds	2
   568  002D                     ??_showString:
   569                           
   570                           ; 1 bytes @ 0x2
   571  002D                     	ds	3
   572  0030                     showString@i:
   573                           
   574                           ; 2 bytes @ 0x5
   575  0030                     	ds	2
   576  0032                     ??_main:
   577                           
   578                           ; 1 bytes @ 0x7
   579  0032                     	ds	3
   580                           
   581                           	psect	maintext
   582  00F6                     __pmaintext:	
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 73 in file "_usart.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : B00/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          0       3       0       0       0
   605 ;;      Totals:         0       3       0       0       0
   606 ;;Total ram usage:        3 bytes
   607 ;; Hardware stack levels required when called:    4
   608 ;; This function calls:
   609 ;;		_setup
   610 ;;		_showString
   611 ;;		_strcpy
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _main
   619  00F6                     _main:
   620  00F6                     l926:	
   621                           ;incstack = 0
   622                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   623                           
   624                           
   625                           ;_usart.c: 75:     setup();
   626  00F6  120A  118A  21E3  120A  118A  	fcall	_setup
   627  00FB                     l928:
   628                           
   629                           ;_usart.c: 76:     strcpy(texto,"hola mundo! ");
   630  00FB  30AF               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   631  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   632  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   633  00FE  00B2               	movwf	??_main
   634  00FF  0832               	movf	??_main,w
   635  0100  00F3               	movwf	strcpy@from
   636  0101  3020               	movlw	(low (_texto| 0))& (0+255)
   637  0102  120A  118A  2236  120A  118A  	fcall	_strcpy
   638  0107                     l930:
   639                           
   640                           ;_usart.c: 80:     {;_usart.c: 81:         _delay((unsigned long)((200)*(8000000/4000.0)
      +                          ));
   641  0107  3003               	movlw	3
   642  0108  1283               	bcf	3,5	;RP0=0, select bank0
   643  0109  1303               	bcf	3,6	;RP1=0, select bank0
   644  010A  00B4               	movwf	??_main+2
   645  010B  3008               	movlw	8
   646  010C  00B3               	movwf	??_main+1
   647  010D  3076               	movlw	118
   648  010E  00B2               	movwf	??_main
   649  010F                     u347:
   650  010F  0BB2               	decfsz	??_main,f
   651  0110  290F               	goto	u347
   652  0111  0BB3               	decfsz	??_main+1,f
   653  0112  290F               	goto	u347
   654  0113  0BB4               	decfsz	??_main+2,f
   655  0114  290F               	goto	u347
   656  0115  0000               	nop
   657  0116                     l932:
   658                           
   659                           ;_usart.c: 83:         if (PIR1bits.TXIF){
   660  0116  1283               	bcf	3,5	;RP0=0, select bank0
   661  0117  1303               	bcf	3,6	;RP1=0, select bank0
   662  0118  1E0C               	btfss	12,4	;volatile
   663  0119  291B               	goto	u271
   664  011A  291C               	goto	u270
   665  011B                     u271:
   666  011B  2907               	goto	l930
   667  011C                     u270:
   668  011C                     l934:
   669                           
   670                           ;_usart.c: 85:             if(flag){
   671  011C  0877               	movf	_flag,w
   672  011D  0478               	iorwf	_flag+1,w
   673  011E  1903               	btfsc	3,2
   674  011F  2921               	goto	u281
   675  0120  2922               	goto	u280
   676  0121                     u281:
   677  0121  294E               	goto	l940
   678  0122                     u280:
   679  0122                     l936:
   680                           
   681                           ;_usart.c: 86:                 showString("Que accion desea ejecutar?");
   682  0122  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   683  0123  00AB               	movwf	showString@var
   684  0124  3080               	movlw	128
   685  0125  00AC               	movwf	showString@var+1
   686  0126  120A  118A  21A8  120A  118A  	fcall	_showString
   687                           
   688                           ;_usart.c: 87:                 showString("(1)Desplegar cadena de caracteres");
   689  012B  3050               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   690  012C  1283               	bcf	3,5	;RP0=0, select bank0
   691  012D  1303               	bcf	3,6	;RP1=0, select bank0
   692  012E  00AB               	movwf	showString@var
   693  012F  3080               	movlw	128
   694  0130  00AC               	movwf	showString@var+1
   695  0131  120A  118A  21A8  120A  118A  	fcall	_showString
   696                           
   697                           ;_usart.c: 88:                 showString("(2)Cambiar PORTA");
   698  0136  308D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   699  0137  1283               	bcf	3,5	;RP0=0, select bank0
   700  0138  1303               	bcf	3,6	;RP1=0, select bank0
   701  0139  00AB               	movwf	showString@var
   702  013A  3080               	movlw	128
   703  013B  00AC               	movwf	showString@var+1
   704  013C  120A  118A  21A8  120A  118A  	fcall	_showString
   705                           
   706                           ;_usart.c: 89:                 showString("(3)Cambiar PORTB");
   707  0141  309E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   708  0142  1283               	bcf	3,5	;RP0=0, select bank0
   709  0143  1303               	bcf	3,6	;RP1=0, select bank0
   710  0144  00AB               	movwf	showString@var
   711  0145  3080               	movlw	128
   712  0146  00AC               	movwf	showString@var+1
   713  0147  120A  118A  21A8  120A  118A  	fcall	_showString
   714  014C                     l938:
   715                           
   716                           ;_usart.c: 90:                 flag = 0;
   717  014C  01F7               	clrf	_flag
   718  014D  01F8               	clrf	_flag+1
   719  014E                     l940:
   720                           
   721                           ;_usart.c: 92:             if(opcion==49){
   722  014E  3031               	movlw	49
   723  014F  0679               	xorwf	_opcion,w
   724  0150  1D03               	btfss	3,2
   725  0151  2953               	goto	u291
   726  0152  2954               	goto	u290
   727  0153                     u291:
   728  0153  2964               	goto	l948
   729  0154                     u290:
   730  0154                     l942:
   731                           
   732                           ;_usart.c: 93:                 showString(texto);
   733  0154  3020               	movlw	(low (_texto| 0))& (0+255)
   734  0155  1283               	bcf	3,5	;RP0=0, select bank0
   735  0156  1303               	bcf	3,6	;RP1=0, select bank0
   736  0157  00AB               	movwf	showString@var
   737  0158  3000               	movlw	0
   738  0159  00AC               	movwf	showString@var+1
   739  015A  120A  118A  21A8  120A  118A  	fcall	_showString
   740  015F                     l944:
   741                           
   742                           ;_usart.c: 94:                 flag = 1;
   743  015F  3001               	movlw	1
   744  0160  00F7               	movwf	_flag
   745  0161  3000               	movlw	0
   746  0162  00F8               	movwf	_flag+1
   747  0163                     l946:
   748                           
   749                           ;_usart.c: 95:                 opcion = 0;
   750  0163  01F9               	clrf	_opcion
   751  0164                     l948:
   752                           
   753                           ;_usart.c: 97:             if(opcion==50){
   754  0164  3032               	movlw	50
   755  0165  0679               	xorwf	_opcion,w
   756  0166  1D03               	btfss	3,2
   757  0167  2969               	goto	u301
   758  0168  296A               	goto	u300
   759  0169                     u301:
   760  0169  2984               	goto	l962
   761  016A                     u300:
   762  016A                     l950:
   763                           
   764                           ;_usart.c: 98:                 showString("Ingrese el caracter a mostrar en PORTA");
   765  016A  3002               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   766  016B  1283               	bcf	3,5	;RP0=0, select bank0
   767  016C  1303               	bcf	3,6	;RP1=0, select bank0
   768  016D  00AB               	movwf	showString@var
   769  016E  3080               	movlw	128
   770  016F  00AC               	movwf	showString@var+1
   771  0170  120A  118A  21A8  120A  118A  	fcall	_showString
   772  0175                     l952:
   773                           
   774                           ;_usart.c: 100:                 flag = 1;
   775  0175  3001               	movlw	1
   776  0176  00F7               	movwf	_flag
   777  0177  3000               	movlw	0
   778  0178  00F8               	movwf	_flag+1
   779  0179                     l954:
   780                           
   781                           ;_usart.c: 101:                 opcion = 0;
   782  0179  01F9               	clrf	_opcion
   783  017A                     l956:	
   784                           ;_usart.c: 103:                 while(!opcion){
   785                           
   786                           
   787                           ;_usart.c: 103:                 while(!opcion){
   788  017A  0879               	movf	_opcion,w
   789  017B  1903               	btfsc	3,2
   790  017C  297E               	goto	u311
   791  017D  297F               	goto	u310
   792  017E                     u311:
   793  017E  297A               	goto	l956
   794  017F                     u310:
   795  017F                     l958:
   796                           
   797                           ;_usart.c: 107:                 PORTA = opcion;
   798  017F  0879               	movf	_opcion,w
   799  0180  1283               	bcf	3,5	;RP0=0, select bank0
   800  0181  1303               	bcf	3,6	;RP1=0, select bank0
   801  0182  0085               	movwf	5	;volatile
   802  0183                     l960:
   803                           
   804                           ;_usart.c: 108:                 opcion = 0;
   805  0183  01F9               	clrf	_opcion
   806  0184                     l962:
   807                           
   808                           ;_usart.c: 112:             if (opcion==51){
   809  0184  3033               	movlw	51
   810  0185  0679               	xorwf	_opcion,w
   811  0186  1D03               	btfss	3,2
   812  0187  2989               	goto	u321
   813  0188  298A               	goto	u320
   814  0189                     u321:
   815  0189  2907               	goto	l930
   816  018A                     u320:
   817  018A                     l964:
   818                           
   819                           ;_usart.c: 113:                 showString("Ingrese el caracter a mostrar en PORTB");
   820  018A  3029               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   821  018B  1283               	bcf	3,5	;RP0=0, select bank0
   822  018C  1303               	bcf	3,6	;RP1=0, select bank0
   823  018D  00AB               	movwf	showString@var
   824  018E  3080               	movlw	128
   825  018F  00AC               	movwf	showString@var+1
   826  0190  120A  118A  21A8  120A  118A  	fcall	_showString
   827  0195                     l966:
   828                           
   829                           ;_usart.c: 115:                 flag = 1;
   830  0195  3001               	movlw	1
   831  0196  00F7               	movwf	_flag
   832  0197  3000               	movlw	0
   833  0198  00F8               	movwf	_flag+1
   834  0199                     l968:
   835                           
   836                           ;_usart.c: 116:                 opcion = 0;
   837  0199  01F9               	clrf	_opcion
   838  019A                     l970:	
   839                           ;_usart.c: 118:                 while(!opcion){
   840                           
   841                           
   842                           ;_usart.c: 118:                 while(!opcion){
   843  019A  0879               	movf	_opcion,w
   844  019B  1903               	btfsc	3,2
   845  019C  299E               	goto	u331
   846  019D  299F               	goto	u330
   847  019E                     u331:
   848  019E  299A               	goto	l970
   849  019F                     u330:
   850  019F                     l972:
   851                           
   852                           ;_usart.c: 122:                 PORTB = opcion;
   853  019F  0879               	movf	_opcion,w
   854  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   855  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   856  01A2  0086               	movwf	6	;volatile
   857  01A3                     l974:
   858                           
   859                           ;_usart.c: 123:                 opcion = 0;
   860  01A3  01F9               	clrf	_opcion
   861  01A4  2907               	goto	l930
   862  01A5  120A  118A  280C   	ljmp	start
   863  01A8                     __end_of_main:
   864                           
   865                           	psect	text1
   866  0236                     __ptext1:	
   867 ;; *************** function _strcpy *****************
   868 ;; Defined at:
   869 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcpy.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  to              1    wreg     PTR unsigned char 
   872 ;;		 -> texto(11), 
   873 ;;  from            1    3[COMMON] PTR const unsigned char 
   874 ;;		 -> STR_1(13), 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  to              1    5[COMMON] PTR unsigned char 
   877 ;;		 -> texto(11), 
   878 ;;  cp              1    6[COMMON] PTR unsigned char 
   879 ;;		 -> texto(11), 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      PTR unsigned char 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         1       0       0       0       0
   890 ;;      Locals:         2       0       0       0       0
   891 ;;      Temps:          1       0       0       0       0
   892 ;;      Totals:         4       0       0       0       0
   893 ;;Total ram usage:        4 bytes
   894 ;; Hardware stack levels used:    2
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _strcpy
   905  0236                     _strcpy:
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
   909                           ;strcpy@to stored from wreg
   910  0236  00F5               	movwf	strcpy@to
   911  0237                     l840:
   912  0237  0875               	movf	strcpy@to,w
   913  0238  00F4               	movwf	??_strcpy
   914  0239  0874               	movf	??_strcpy,w
   915  023A  00F6               	movwf	strcpy@cp
   916  023B  2A44               	goto	l844
   917  023C                     l842:
   918  023C  3001               	movlw	1
   919  023D  00F4               	movwf	??_strcpy
   920  023E  0874               	movf	??_strcpy,w
   921  023F  07F6               	addwf	strcpy@cp,f
   922  0240  3001               	movlw	1
   923  0241  00F4               	movwf	??_strcpy
   924  0242  0874               	movf	??_strcpy,w
   925  0243  07F3               	addwf	strcpy@from,f
   926  0244                     l844:
   927  0244  0873               	movf	strcpy@from,w
   928  0245  0084               	movwf	4
   929  0246  120A  118A  2035  120A  118A  	fcall	stringdir
   930  024B  00F4               	movwf	??_strcpy
   931  024C  0876               	movf	strcpy@cp,w
   932  024D  0084               	movwf	4
   933  024E  0874               	movf	??_strcpy,w
   934  024F  1383               	bcf	3,7	;select IRP bank0
   935  0250  0080               	movwf	0
   936  0251  0800               	movf	0,w
   937  0252  1D03               	btfss	3,2
   938  0253  2A55               	goto	u141
   939  0254  2A56               	goto	u140
   940  0255                     u141:
   941  0255  2A3C               	goto	l842
   942  0256                     u140:
   943  0256                     l626:
   944  0256  0008               	return
   945  0257                     __end_of_strcpy:
   946                           
   947                           	psect	text2
   948  01A8                     __ptext2:	
   949 ;; *************** function _showString *****************
   950 ;; Defined at:
   951 ;;		line 186 in file "_usart.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  var             2    0[BANK0 ] PTR unsigned char 
   954 ;;		 -> STR_7(39), STR_6(39), STR_5(17), STR_4(17), 
   955 ;;		 -> STR_3(34), STR_2(27), texto(11), 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  i               2    5[BANK0 ] int 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       2       0       0       0
   968 ;;      Locals:         0       2       0       0       0
   969 ;;      Temps:          0       3       0       0       0
   970 ;;      Totals:         0       7       0       0       0
   971 ;;Total ram usage:        7 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    3
   974 ;; This function calls:
   975 ;;		_strlen
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _showString
   983  01A8                     _showString:
   984  01A8                     l916:	
   985                           ;incstack = 0
   986                           ; Regs used in _showString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   987                           
   988                           
   989                           ;_usart.c: 187:     int i;;_usart.c: 189:     for (i = 0; i < strlen(var); i++) {
   990  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   991  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   992  01AA  01B0               	clrf	showString@i
   993  01AB  01B1               	clrf	showString@i+1
   994  01AC  29CB               	goto	l922
   995  01AD                     l918:
   996                           
   997                           ;_usart.c: 190:         TXREG = var[i];
   998  01AD  0830               	movf	showString@i,w
   999  01AE  072B               	addwf	showString@var,w
  1000  01AF  00AE               	movwf	??_showString+1
  1001  01B0  082C               	movf	showString@var+1,w
  1002  01B1  00AD               	movwf	??_showString
  1003  01B2  1803               	skipnc
  1004  01B3  0AAD               	incf	??_showString,f
  1005  01B4  1FB0               	btfss	showString@i,7
  1006  01B5  29B7               	goto	u250
  1007  01B6  03AD               	decf	??_showString,f
  1008  01B7                     u250:
  1009  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1010  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1011  01B9  082D               	movf	??_showString,w
  1012  01BA  00AF               	movwf	??_showString+2
  1013  01BB  082F               	movf	??_showString+2,w
  1014  01BC  00FF               	movwf	btemp+1
  1015  01BD  082E               	movf	??_showString+1,w
  1016  01BE  0084               	movwf	4
  1017  01BF  120A  118A  202B  120A  118A  	fcall	stringtab
  1018  01C4  0099               	movwf	25	;volatile
  1019  01C5                     l920:
  1020                           
  1021                           ;_usart.c: 191:     }
  1022  01C5  3001               	movlw	1
  1023  01C6  07B0               	addwf	showString@i,f
  1024  01C7  1803               	skipnc
  1025  01C8  0AB1               	incf	showString@i+1,f
  1026  01C9  3000               	movlw	0
  1027  01CA  07B1               	addwf	showString@i+1,f
  1028  01CB                     l922:
  1029  01CB  082B               	movf	showString@var,w
  1030  01CC  00F3               	movwf	strlen@s
  1031  01CD  082C               	movf	showString@var+1,w
  1032  01CE  00F4               	movwf	strlen@s+1
  1033  01CF  120A  118A  2212  120A  118A  	fcall	_strlen
  1034  01D4  0874               	movf	?_strlen+1,w
  1035  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1036  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1037  01D7  0231               	subwf	showString@i+1,w
  1038  01D8  1D03               	skipz
  1039  01D9  29DC               	goto	u265
  1040  01DA  0873               	movf	?_strlen,w
  1041  01DB  0230               	subwf	showString@i,w
  1042  01DC                     u265:
  1043  01DC  1C03               	skipc
  1044  01DD  29DF               	goto	u261
  1045  01DE  29E0               	goto	u260
  1046  01DF                     u261:
  1047  01DF  29AD               	goto	l918
  1048  01E0                     u260:
  1049  01E0                     l924:
  1050                           
  1051                           ;_usart.c: 192:     TXREG = 13;
  1052  01E0  300D               	movlw	13
  1053  01E1  0099               	movwf	25	;volatile
  1054  01E2                     l86:
  1055  01E2  0008               	return
  1056  01E3                     __end_of_showString:
  1057                           
  1058                           	psect	text3
  1059  0212                     __ptext3:	
  1060 ;; *************** function _strlen *****************
  1061 ;; Defined at:
  1062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  s               2    3[COMMON] PTR const unsigned char 
  1065 ;;		 -> STR_7(39), STR_6(39), STR_5(17), STR_4(17), 
  1066 ;;		 -> STR_3(34), STR_2(27), texto(11), 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  cp              2    5[COMMON] PTR const unsigned char 
  1069 ;;		 -> STR_7(39), STR_6(39), STR_5(17), STR_4(17), 
  1070 ;;		 -> STR_3(34), STR_2(27), texto(11), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2    3[COMMON] unsigned int 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         2       0       0       0       0
  1081 ;;      Locals:         2       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0
  1083 ;;      Totals:         4       0       0       0       0
  1084 ;;Total ram usage:        4 bytes
  1085 ;; Hardware stack levels used:    2
  1086 ;; Hardware stack levels required when called:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_showString
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _strlen
  1096  0212                     _strlen:
  1097  0212                     l906:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1100                           
  1101  0212  0873               	movf	strlen@s,w
  1102  0213  00F5               	movwf	strlen@cp
  1103  0214  0874               	movf	strlen@s+1,w
  1104  0215  00F6               	movwf	strlen@cp+1
  1105  0216  2A1D               	goto	l910
  1106  0217                     l908:
  1107  0217  3001               	movlw	1
  1108  0218  07F5               	addwf	strlen@cp,f
  1109  0219  1803               	skipnc
  1110  021A  0AF6               	incf	strlen@cp+1,f
  1111  021B  3000               	movlw	0
  1112  021C  07F6               	addwf	strlen@cp+1,f
  1113  021D                     l910:
  1114  021D  0876               	movf	strlen@cp+1,w
  1115  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1116  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0220  00FF               	movwf	btemp+1
  1118  0221  0875               	movf	strlen@cp,w
  1119  0222  0084               	movwf	4
  1120  0223  120A  118A  202B  120A  118A  	fcall	stringtab
  1121  0228  3A00               	xorlw	0
  1122  0229  1D03               	skipz
  1123  022A  2A2C               	goto	u241
  1124  022B  2A2D               	goto	u240
  1125  022C                     u241:
  1126  022C  2A17               	goto	l908
  1127  022D                     u240:
  1128  022D                     l912:
  1129  022D  0873               	movf	strlen@s,w
  1130  022E  0275               	subwf	strlen@cp,w
  1131  022F  00F3               	movwf	?_strlen
  1132  0230  0874               	movf	strlen@s+1,w
  1133  0231  1C03               	skipc
  1134  0232  0A74               	incf	strlen@s+1,w
  1135  0233  0276               	subwf	strlen@cp+1,w
  1136  0234  00F4               	movwf	?_strlen+1
  1137  0235                     l632:
  1138  0235  0008               	return
  1139  0236                     __end_of_strlen:
  1140                           
  1141                           	psect	text4
  1142  01E3                     __ptext4:	
  1143 ;; *************** function _setup *****************
  1144 ;; Defined at:
  1145 ;;		line 144 in file "_usart.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           
  1174                           ;psect for function _setup
  1175  01E3                     _setup:
  1176  01E3                     l810:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _setup: [wreg+status,2]
  1179                           
  1180                           
  1181                           ;_usart.c: 147:     OSCCONbits.IRCF2 = 1;
  1182  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1183  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1184  01E5  170F               	bsf	15,6	;volatile
  1185                           
  1186                           ;_usart.c: 148:     OSCCONbits.IRCF1 = 1;
  1187  01E6  168F               	bsf	15,5	;volatile
  1188                           
  1189                           ;_usart.c: 149:     OSCCONbits.IRCF0 = 1;
  1190  01E7  160F               	bsf	15,4	;volatile
  1191                           
  1192                           ;_usart.c: 150:     OSCCONbits.SCS = 1;
  1193  01E8  140F               	bsf	15,0	;volatile
  1194  01E9                     l812:
  1195                           
  1196                           ;_usart.c: 153:     ANSELH = 0x00;
  1197  01E9  1683               	bsf	3,5	;RP0=1, select bank3
  1198  01EA  1703               	bsf	3,6	;RP1=1, select bank3
  1199  01EB  0189               	clrf	9	;volatile
  1200                           
  1201                           ;_usart.c: 154:     ANSEL = 0x00;
  1202  01EC  0188               	clrf	8	;volatile
  1203                           
  1204                           ;_usart.c: 156:     TRISA = 0x00;
  1205  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1206  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1207  01EF  0185               	clrf	5	;volatile
  1208                           
  1209                           ;_usart.c: 157:     TRISB = 0x00;
  1210  01F0  0186               	clrf	6	;volatile
  1211                           
  1212                           ;_usart.c: 158:     PORTA = 0x00;
  1213  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01F3  0185               	clrf	5	;volatile
  1216                           
  1217                           ;_usart.c: 159:     PORTB = 0x00;
  1218  01F4  0186               	clrf	6	;volatile
  1219  01F5                     l814:
  1220                           
  1221                           ;_usart.c: 162:     INTCONbits.GIE = 1;
  1222  01F5  178B               	bsf	11,7	;volatile
  1223  01F6                     l816:
  1224                           
  1225                           ;_usart.c: 163:     INTCONbits.PEIE = 1;
  1226  01F6  170B               	bsf	11,6	;volatile
  1227  01F7                     l818:
  1228                           
  1229                           ;_usart.c: 164:     PIE1bits.RCIE = 1;
  1230  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1231  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1232  01F9  168C               	bsf	12,5	;volatile
  1233  01FA                     l820:
  1234                           
  1235                           ;_usart.c: 165:     PIR1bits.RCIF = 0;
  1236  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1237  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1238  01FC  128C               	bcf	12,5	;volatile
  1239  01FD                     l822:
  1240                           
  1241                           ;_usart.c: 169:     TXSTAbits.SYNC = 0;
  1242  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1243  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1244  01FF  1218               	bcf	24,4	;volatile
  1245  0200                     l824:
  1246                           
  1247                           ;_usart.c: 170:     TXSTAbits.BRGH = 1;
  1248  0200  1518               	bsf	24,2	;volatile
  1249  0201                     l826:
  1250                           
  1251                           ;_usart.c: 172:     BAUDCTLbits.BRG16 = 1;
  1252  0201  1683               	bsf	3,5	;RP0=1, select bank3
  1253  0202  1703               	bsf	3,6	;RP1=1, select bank3
  1254  0203  1587               	bsf	7,3	;volatile
  1255  0204                     l828:
  1256                           
  1257                           ;_usart.c: 174:     SPBRG = 207;
  1258  0204  30CF               	movlw	207
  1259  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0207  0099               	movwf	25	;volatile
  1262  0208                     l830:
  1263                           
  1264                           ;_usart.c: 175:     SPBRGH = 0;
  1265  0208  019A               	clrf	26	;volatile
  1266  0209                     l832:
  1267                           
  1268                           ;_usart.c: 177:     RCSTAbits.SPEN = 1;
  1269  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1270  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1271  020B  1798               	bsf	24,7	;volatile
  1272  020C                     l834:
  1273                           
  1274                           ;_usart.c: 178:     RCSTAbits.RX9 = 0;
  1275  020C  1318               	bcf	24,6	;volatile
  1276  020D                     l836:
  1277                           
  1278                           ;_usart.c: 179:     RCSTAbits.CREN = 1;
  1279  020D  1618               	bsf	24,4	;volatile
  1280  020E                     l838:
  1281                           
  1282                           ;_usart.c: 181:     TXSTAbits.TXEN = 1;
  1283  020E  1683               	bsf	3,5	;RP0=1, select bank1
  1284  020F  1303               	bcf	3,6	;RP1=0, select bank1
  1285  0210  1698               	bsf	24,5	;volatile
  1286  0211                     l80:
  1287  0211  0008               	return
  1288  0212                     __end_of_setup:
  1289                           
  1290                           	psect	text5
  1291  0257                     __ptext5:	
  1292 ;; *************** function _isr *****************
  1293 ;; Defined at:
  1294 ;;		line 132 in file "_usart.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          3       0       0       0       0
  1311 ;;      Totals:         3       0       0       0       0
  1312 ;;Total ram usage:        3 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		Interrupt level 1
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _isr
  1323  0257                     _isr:
  1324  0257                     i1l796:
  1325                           
  1326                           ;_usart.c: 134:     if (PIR1bits.RCIF){
  1327  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0259  1E8C               	btfss	12,5	;volatile
  1330  025A  2A5C               	goto	u12_21
  1331  025B  2A5D               	goto	u12_20
  1332  025C                     u12_21:
  1333  025C  2A61               	goto	i1l77
  1334  025D                     u12_20:
  1335  025D                     i1l798:
  1336                           
  1337                           ;_usart.c: 135:         opcion = RCREG;
  1338  025D  081A               	movf	26,w	;volatile
  1339  025E  00F0               	movwf	??_isr
  1340  025F  0870               	movf	??_isr,w
  1341  0260  00F9               	movwf	_opcion
  1342  0261                     i1l77:
  1343  0261  0872               	movf	??_isr+2,w
  1344  0262  008A               	movwf	10
  1345  0263  0E71               	swapf	??_isr+1,w
  1346  0264  0083               	movwf	3
  1347  0265  0EFE               	swapf	btemp,f
  1348  0266  0E7E               	swapf	btemp,w
  1349  0267  0009               	retfie
  1350  0268                     __end_of_isr:
  1351  007E                     btemp	set	126	;btemp
  1352  007E                     wtemp0	set	126
  1353                           
  1354                           	psect	intentry
  1355  0004                     __pintentry:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _isr: [wreg]
  1358                           
  1359  0004                     interrupt_function:
  1360  007E                     saved_w	set	btemp
  1361  0004  00FE               	movwf	btemp
  1362  0005  0E03               	swapf	3,w
  1363  0006  00F1               	movwf	??_isr+1
  1364  0007  080A               	movf	10,w
  1365  0008  00F2               	movwf	??_isr+2
  1366  0009  120A  118A  2A57   	ljmp	_isr
  1367                           
  1368                           	psect	config
  1369                           
  1370                           ;Config register CONFIG1 @ 0x2007
  1371                           ;	Oscillator Selection bits
  1372                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1373                           ;	Watchdog Timer Enable bit
  1374                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1375                           ;	Power-up Timer Enable bit
  1376                           ;	PWRTE = ON, PWRT enabled
  1377                           ;	RE3/MCLR pin function select bit
  1378                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1379                           ;	Code Protection bit
  1380                           ;	CP = OFF, Program memory code protection is disabled
  1381                           ;	Data Code Protection bit
  1382                           ;	CPD = OFF, Data memory code protection is disabled
  1383                           ;	Brown Out Reset Selection bits
  1384                           ;	BOREN = OFF, BOR disabled
  1385                           ;	Internal External Switchover bit
  1386                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1387                           ;	Fail-Safe Clock Monitor Enabled bit
  1388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1389                           ;	Low Voltage Programming Enable bit
  1390                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1391                           ;	In-Circuit Debugger Mode bit
  1392                           ;	DEBUG = 0x1, unprogrammed default
  1393  2007                     	org	8199
  1394  2007  30C4               	dw	12484
  1395                           
  1396                           ;Config register CONFIG2 @ 0x2008
  1397                           ;	Brown-out Reset Selection bit
  1398                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1399                           ;	Flash Program Memory Self Write Enable bits
  1400                           ;	WRT = OFF, Write protection off
  1401  2008                     	org	8200
  1402  2008  3FFF               	dw	16383

Data Sizes:
    Strings     186
    Constant    1
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     10      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_7(CODE[39]), STR_6(CODE[39]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[34]), STR_2(CODE[27]), texto(BANK0[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_7(CODE[39]), STR_6(CODE[39]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[34]), STR_2(CODE[27]), texto(BANK0[11]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 11
		 -> texto(BANK0[11]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 11
		 -> texto(BANK0[11]), 

    showString@var	PTR unsigned char  size(2) Largest target is 39
		 -> STR_7(CODE[39]), STR_6(CODE[39]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[34]), STR_2(CODE[27]), texto(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 11
		 -> texto(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_strcpy
    _showString->_strlen

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_showString

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1164
                                              7 BANK0      3     3      0
                              _setup
                         _showString
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     184
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _showString                                           7     5      2     980
                                              0 BANK0      7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     220
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _showString
     _strlen
   _strcpy

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 25 13:02:29 2021

                      pc 0002                       l80 0211                       l86 01E2  
                     fsr 0004                      l632 0235                      l810 01E3  
                    l626 0256                      l820 01FA                      l812 01E9  
                    l830 0208                      l822 01FD                      l814 01F5  
                    l910 021D                      l832 0209                      l824 0200  
                    l816 01F6                      l912 022D                      l920 01C5  
                    l840 0237                      l834 020C                      l826 0201  
                    l818 01F7                      l906 0212                      l922 01CB  
                    l842 023C                      l930 0107                      l836 020D  
                    l828 0204                      l908 0217                      l924 01E0  
                    l916 01A8                      l844 0244                      l940 014E  
                    l932 0116                      l838 020E                      l918 01AD  
                    l950 016A                      l942 0154                      l934 011C  
                    l926 00F6                      l960 0183                      l952 0175  
                    l944 015F                      l936 0122                      l928 00FB  
                    l970 019A                      l954 0179                      l962 0184  
                    l946 0163                      l938 014C                      l972 019F  
                    l964 018A                      l956 017A                      l948 0164  
                    l974 01A3                      l966 0195                      l958 017F  
                    l968 0199                      u140 0256                      u300 016A  
                    u141 0255                      u301 0169                      u310 017F  
                    u311 017E                      u240 022D                      u320 018A  
                    u241 022C                      u321 0189                      u250 01B7  
                    u330 019F                      u331 019E                      u260 01E0  
                    u261 01DF                      u270 011C                      u271 011B  
                    u280 0122                      u265 01DC                      u281 0121  
                    u290 0154                      u291 0153                      u347 010F  
                    _isr 0257                      fsr0 0004                      indf 0000  
          showString@var 002B                     ?_isr 0070                     STR_1 00E9  
                   STR_2 00AC                     STR_3 008A                     STR_4 00C7  
                   STR_5 00D8                     STR_6 003C                     STR_7 0063  
                   i1l77 0261                     _data 003B                     _flag 0077  
                   _main 00F6                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l796 0257                    i1l798 025D                    _RCREG 001A  
                  u12_20 025D                    u12_21 025C                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _setup 01E3  
                  _texto 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_data 003C  
           __end_of_main 01A8                   ??_main 0032                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _opcion 0079  
                 _strcpy 0236                   _strlen 0212             __pdataCOMMON 0077  
                 saved_w 007E  __end_of__initialization 0027           __pcstackCOMMON 0070  
          __end_of_setup 0212                  ??_setup 0073               __pbssBANK0 0020  
             __pmaintext 00F6               __pintentry 0004                  ?_strcpy 0073  
                ?_strlen 0073               __stringtab 002B                  __ptext1 0236  
                __ptext2 01A8                  __ptext3 0212                  __ptext4 01E3  
                __ptext5 0257          __size_of_strcpy 0021          __size_of_strlen 0024  
           __size_of_isr 0011     end_of_initialization 0027                _RCSTAbits 0018  
                strlen@s 0073               _showString 01A8              showString@i 0030  
              _TXSTAbits 0098            __pidataCOMMON 0268              _BAUDCTLbits 0187  
         __end_of_strcpy 0257           __end_of_strlen 0236      start_initialization 000F  
            __end_of_isr 0268              ?_showString 002B                 ??_strcpy 0074  
               ??_strlen 0075              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 002B                __pstrings 002B           __size_of_setup 002F  
      interrupt_function 0004      __size_of_showString 003B                 _PIE1bits 008C  
               _PIR1bits 000C              __stringbase 003A       __end_of__stringtab 003B  
             strcpy@from 0073            __size_of_main 00B2             ??_showString 002D  
             _INTCONbits 000B                 intlevel1 0000       __end_of_showString 01E3  
              stringcode 0035               _OSCCONbits 008F                 strcpy@cp 0076  
               strlen@cp 0075                 strcpy@to 0075                 stringdir 0035  
               stringtab 002B  
